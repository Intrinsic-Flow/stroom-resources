# docker-compose 
alias bounceAll='./bounceIt.sh compose/hbase-kafka-mysql-zk.yml'

kConsumeTopic() {
    topicName="$1"
    echo "Consuming from topic(s) [$topicName] (comma delimited list of topics)"
    docker exec -i -t kafka bash -c "unset JMX_PORT; /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server kafka:9092 --property print.key=true --property key.separator=\"|\" --zookeeper zookeeper:2181/kafka --whitelist $topicName"
}

kCreateTopic() {
    topicName="$1"
    partitionCount="$2"
    if [ "${partitionCount}x" = "x" ]; then
        partitionCount=1
    fi
    echo "Creating topic [$topicName] with partition count [$partitionCount]"
    docker exec -i -t kafka bash -c "unset JMX_PORT; /opt/kafka/bin/kafka-topics.sh --create --zookeeper zookeeper:2181/kafka --replication-factor 1 --partitions $partitionCount --topic $topicName"
}

execSQL() {
    service="$1"
    mysqlArgs="$2"
    sql="$3"

    docker exec -it ${service} bash -c "echo \"${sql}\" | mysql ${mysqlArgs}"
}

# Kafka aliases
# We need to unset the JMX_PORT because these scripts share a script with the Kafka start script. The shared script uses the JMX_PORT, so no more than one of these scripts can be run from the same address
alias createStatisticsTopic='docker exec -i -t kafka bash -c "unset JMX_PORT; bin/kafka-topics.sh --create --zookeeper zookeeper:2181/kafka --replication-factor 1 --partitions 1 --topic statistics"'
alias kproduce='docker exec -i -t kafka bash -c "unset JMX_PORT; bin/kafka-console-producer.sh --broker-list localhost:9092 --topic statistics"'
alias kconsume='kConsumeTopic'
#consume from all topics
alias kconsumeAll='echo "Consuming from all topics..."; docker exec -i -t kafka bash -c "unset JMX_PORT; /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --blacklist noSuchTopic --from-beginning --zookeeper zookeeper:2181/kafka"'
alias kconsumeEvents='echo "Consuming from topics statisticEvents-Count & statisticEvents-Value ..."; docker exec -i -t kafka bash -c "unset JMX_PORT; /opt/kafka/bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --zookeeper zookeeper:2181/kafka --whitelist statisticEvents-Count,statisticEvents-Value"'
alias ktopics='docker exec -i -t kafka bash -c "unset JMX_PORT; /opt/kafka/bin/kafka-topics.sh --list --zookeeper zookeeper:2181/kafka"'
alias kcreate='kCreateTopic'

# For running bash in the containers
alias kbash='docker exec -i -t kafka bash'
alias zkbash='docker exec -i -t zookeeper bash'
alias hbasebash='docker exec -i -t hbase bash'
alias stroombash='docker exec -it --user stroom stroom bash'
alias statsbash='docker exec -it --user stroomstats stroom-stats bash'
alias stroomdbbash='docker exec -it stroom-db bash'
alias nginxbash='docker exec -it nginx bash'

# ZK CLI
alias zkcli='docker exec -i -t zookeeper bin/zkCli.sh -server 127.0.0.1:2181'
#
#HBase CLI
alias hbasecli='docker exec -i -t hbase hbase/bin/hbase shell'

hbaseTableCount() {
    tableName=$1
    echo "Getting count of table $tableName"
    cmd="count '"${tableName}"'"
    docker exec -i -t hbase bash -c "echo \"${cmd}\" | hbase/bin/hbase shell"
}
alias hbasecount='hbaseTableCount'

#MySQL CLI
alias stroomdb='docker exec -it stroom-db mysql -h"localhost" -P"3307" -u"stroomuser" -p"stroompassword1" stroom'
alias stroomstatsdb='docker exec -it stroom-stats-db mysql -h"localhost" -P"3308" -u"stroomuser" -p"stroompassword1" statistics'
alias stroomauthdb='docker exec -it stroom-auth-db mysql -h"localhost" -P"3309" -u"stroomuser" -p"stroompassword1" auth'

alias stroomdb_dump='docker exec -it stroom-db mysqldump --databases stroom -h"localhost" -P"3307" -u"root" -p"my-secret-pw" | grep -v "Using a password"'
alias stroomstatsdb_dump='docker exec -it stroom-stats-db mysqldump --databases statistics -h"localhost" -P"3308" -u"root" -p"my-secret-pw" | grep -v "Using a password"'
alias stroomauthdb_dump='docker exec -it stroom-auth-db mysqldump --databases auth -h"localhost" -P"3309" -u"root" -p"my-secret-pw" | grep -v "Using a password"'

#TODO not working 
alias stroomstatsdb_counts='execSQL stroom-stats-db "-h\"localhost\" -P\"3308\" -u\"stroomuser\" -p\"stroompassword1\" statistics" "select \"key\", count(*) from SQL_STAT_KEY union select \"val\", count(*) from SQL_STAT_VAL union select \"src\", count(*) from SQL_STAT_VAL_SRC;" '

# Pipe the output of the dump commands to a file on the host
# To re-import the database dumps, use something like this
#cat ~/stroomDb.backup.02032018.sql | docker exec -i stroom-db mysql -u"root" -p"my-secret-pw"

# docker status
alias ds='echo -e "\e[96mSummary\e[0m" && docker system df && echo && echo -e "\e[96mImages\e[0m" && docker images && echo "" && echo -e "\e[96mAll containers\e[0m" && docker ps -a -s && echo "" && echo -e "\e[96mRunning containers\e[0m" && docker ps && echo ""'
