user  nginx;

worker_processes  1;

events {
    worker_connections  1024;
}

http {

    index index.html index.htm;

    # Note: We could use `stroomProxy` in `proxy_pass`. Useful if we want to refer to the
    # address several times (which we don't yet).
    #upstream stroomProxy {
    #    server <SWARM_IP>:8085;
    #}

    server {
        root /usr/share/nginx/html;

        listen                  80;
        listen                  443 ssl;
        server_name             localhost;

        ssl_certificate         /etc/nginx/certs/server.pem.crt;
        ssl_certificate_key     /etc/nginx/certs/server.unencrypted.key;
        ssl_client_certificate  /etc/nginx/certs/ca.pem.crt;
        # This needs to be on otherwise we won't be able to extract the DN or the cert
        ssl_verify_client       on;
        ssl_verify_depth        1;

        # Was the CA cert configured with an OCSP responder?
        #   - If so you can enable the following lines and NGINX will call out to the OCSP 
        #     server to check for revoked certificates. 
        # Are there intermediate CA certs?
        #   - If so you will need to cat them together to make sure the OCSP server is picked up.
        #ssl_stapling on;
        #ssl_stapling_verify on;
        #ssl_trusted_certificate /etc/nginx/certs/ca.pem.crt;


        #
        # Wide-open CORS config for nginx
        #
        location / {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                #
                # Custom headers and headers various browsers *should* be OK with but aren't
                #
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                #
                # Tell client that this pre-flight info is valid for 20 days
                #
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
                add_header 'Access-Control-Expose-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Content-Range,Range';
            }
        }

        location /stats/ {
            proxy_pass http://<SWARM_IP>:8086/;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Note: the path for admin must match the `adminContextPath` in the configuration
        # for the Dropwizard app. This is configured by environment variable in `swarm.yml`.
        location /stats/admin/ {
            proxy_pass http://<SWARM_IP>:8087/stats/admin/;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }



        location /proxy/ {
            proxy_pass http://<SWARM_IP>:8085/;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        # The following two `location` blocks are the same apart from matching a trailing slash.
        # This can be done with regexs but then we'd need to add location rewrites to preserve the path.
        # We could do that but as of right now this is the simpler solution.
        location /authentication/ {
            proxy_pass http://<SWARM_IP>:8099/authentication/v1/;
            add_header Access-Control-Allow-Origin *;
        }

        location /authentication {
            proxy_pass http://<SWARM_IP>:8099/authentication/v1/;
            add_header Access-Control-Allow-Origin *;
        }

        location /authentication/admin {
            # Note: the path below must match the `adminContextPath` in the configuration
            # for the Dropwizard app. This is configured by environment variable in `swarm.yml`.
            proxy_pass http://<SWARM_IP>:8100/authentication/v1/admin/;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        location /user {
            proxy_pass http://<SWARM_IP>:8099/user/v1/;
            add_header Access-Control-Allow-Origin *;
        }

        location /user/ {
            proxy_pass http://<SWARM_IP>:8099/user/v1/;
            add_header Access-Control-Allow-Origin *;
        }


        location /stroom/ {
            proxy_pass http://<STROOM_URL>:8080/;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
        }


        location /authenticationService {
            proxy_pass http://<AUTH_UI_URL>:8099/authentication;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # We only need to pass in the DN.
            proxy_set_header X-SSL-ClIENT-S-DN   $ssl_client_s_dn;
        }



        location /userService {
            proxy_pass http://<AUTH_UI_URL>:8099/user;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # We only need to pass in the DN.
            proxy_set_header X-SSL-ClIENT-S-DN   $ssl_client_s_dn;
        }


        location /auth {
            proxy_pass http://<AUTH_UI_URL>:5000;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # We only need to pass in the DN.
            proxy_set_header X-SSL-ClIENT-S-DN   $ssl_client_s_dn;
        }

        location /auth/ {
            proxy_pass http://<AUTH_UI_URL>:5000/;
            add_header Access-Control-Allow-Origin *;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # We only need to pass in the DN.
            proxy_set_header X-SSL-ClIENT-S-DN   $ssl_client_s_dn;
        }
    }
}